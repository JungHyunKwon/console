/**
 * @name consoleFix
 * @author JungHyunKwon
 * @since 2018-08-02
 * @version 1.0.0
 */
!function(console){"use strict";if(!console){var methodNames=["assert","clear","count","debug","dir","dirxml","error","exception","group","groupCollapsed","groupEnd","info","log","markTimeline","profile","profileEnd","table","time","timeEnd","timeStamp","trace","warn"],methodCode="";window.console={replacement:[]};for(var i=0,methodsLength=methodNames.length;i<methodsLength;i++){var methodName=methodNames[i];methodCode+="window.console['"+methodName+"'] = function() {\n",methodCode+="\tvar result = [],\n",methodCode+="\t\targumentsLength = arguments.length;\n\n",methodCode+="\tif(argumentsLength > 1) {\n",methodCode+="\t\tfor(var i = 0; i < argumentsLength; i++) {\n",methodCode+="\t\t\tresult.push(arguments[i]);\n",methodCode+="\t\t}\n",methodCode+="\t}else if(argumentsLength === 1) {\n",methodCode+="\t\tresult = arguments[0];\n",methodCode+="\t}\n\n",methodCode+="\tif(argumentsLength) {\n",methodCode+="\t\tthis.replacement.push({\n",methodCode+="\t\t\tmethodName : '"+methodName+"',\n",methodCode+="\t\t\tvalue : result\n",methodCode+="\t\t});\n",methodCode+="\t}\n\n",methodCode+="\treturn this.replacement;\n",methodCode+="};\n\n"}methodCode=methodCode.replace(/\n$/,""),eval(methodCode)}}(window.console);